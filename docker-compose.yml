version: '2.2'

networks:
  default:

volumes:
  portainer:
  mysql:
  wordpress:
  traefik:

services:
# https://documentation.portainer.io/
  portainer:
    image: portainer/portainer-ce
    restart: unless-stopped
    environment:
      TZ: "${TZ}"
    command: -H unix:///var/run/docker.sock
    networks:
      - default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data

# https://github.com/linuxserver/docker-mariadb
  mysql:
    image: ghcr.io/linuxserver/mariadb
    restart: unless-stopped
    environment:
      PUID: ${PUID}
      GUID: ${GUID}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: ${TZ}
    networks:
      - default
    volumes:
      - mysql:/config

# https://hub.docker.com/_/wordpress
# https://hub.docker.com/r/arm32v7/wordpress
  wordpress:
#    image: arm32v7/wordpress:latest
    image: ${WORDPRESS_IMAGE}
    restart: unless-stopped
    depends_on:
      - mysql
    environment:
      WORDPRESS_DB_HOST: ${MYSQL_HOST}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TZ}
    networks:
      - default
    volumes:
      - wordpress:/var/www/html

# https://hub.docker.com/_/phpmyadmin
  phpmyadmin:
    image: 'phpmyadmin:latest'
    restart: unless-stopped
    depends_on:
      - mysql
    environment:
      PMA_HOST: ${MYSQL_HOST}
    networks:
      - default

# https://hub.docker.com/r/netdata/netdata
  netdata:
    image: netdata/netdata
    restart: unless-stopped
    hostname: "${NETDATA_HOST}"
    environment:
      PGID: "${DOCKER_PGID}"
      TZ: "${TZ}"
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    networks:
      - default
    volumes:
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
